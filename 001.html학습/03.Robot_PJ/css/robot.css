@charset "utf-8";

/*robot PJ 메인 CSS - robot.css */

/*  초기화*/

html,
body,
h1,
h2,
p,
ul,
ol {
    margin: 0;
    padding: 0;
}

/* **************공통 클래스  ***************/
/* 메탈소재1  배경 */
.mt1 {
    background: url(../images/metal01.jpg) no-repeat center/cover;
}

/* 메탈소재2  배경 */
.mt2 {
    background: url(../images/metal02.jpg) no-repeat center/cover;
}

body {
    background: url(../images/bg.jpg) no-repeat fixed top/cover;
}

/* 공사중 표시 
 */
body * {
    outline: 2px dashed yellow;
}

/******************************************** 1.
            1상단영역
 ********************************************/
/******************************************** 
            2.메인영역 
*******************************************/
/* 2-1. 로봇박스 */
.robx {
    /* 패딩 위, 아래 */
    padding: 200px 0 600px;
}

/* 로봇머리 */
.head {
    position: relative;
    /* 마영오가 먹히는 static 한 랠러티브를 줌 
    부모자격: 하위 div 들  */
    z-index: 1;
    /* .body보다 위 */
    width: 250px;
    height: 150px;
    /* 마영오 */
    margin: 0 auto;
    /* 턱 깍기  */
    /*  clip-path: polygon(0 0, 0 50px, 30% 100%, 60% 100%, 100% 50%, 100% 0) */
    /*    border-radius: 30px 30px 50% 50%; */
}

/* 로봇머리 직계하위 div는 모두 앱솔루트 */
.head > div {
    position: absolute;
}

/* 로봇 머리에 가상 요소로 머리털 박스 만들기  
가상요소도 자식이다. */
.head::before {
    content: "";
    display: block;
    position: absolute;
    top: -134px;
    left: -105px;
    /* 부모는? .head 이다.  */
    width: 453px;
    height: 200px;
    background: url(../images/hair5.png) no-repeat 0/100% 100%;
    /* 맨위 */
    z-index: 1;
}

/* 머리박스에 오버시 가상요소 가발 변경하기 */
/* 가상클래스,가상요소는 떨어질 수 없다.   */
.head:hover::before {
    content: "";
    display: block;
    position: absolute;
    top: -120px;
    left: -116px;
    width: 450px;
    height: 200px;
    background: url(../images/hair4.png) no-repeat 0/100% 100%;
    z-index: 1;
}

/* 가상요소는 1박스당 2개를 만들 수 있다. 
머리박스 가상요소로 턱 만들기 */
.head::after {
    content: "";
    display: block;
    position: absolute;
    top: 100%;
    /* 부모박스 높이만큼 밀어준다.! */
    z-index: -1;
    width: 250px;
    height: 100px;
    background: url(../images/metal01.jpg) no-repeat bottom/100%;
    /* 턱 깍기 overflow : hidden 를 주는 것과 같다. 
    히든 처리를 안 했을지라도, 그래서 box-shadow 안된다. */
    clip-path: polygon(0 0, 33.33% 100%, 66.66% 100%, 100% 0);

    /* 박스 그림자 */
    box-shadow: 0 10px 5px #000;
}

/* 눈공통 */
.eye {
    width: 50px;
    height: 50px;

    /* 배경화면 */
    background-color: #fff;
    background-repeat: no-repeat;
    background-position: center;
    background-size: 100% 100%;

    /*둥근 모서리 : 50% 원*/
    border-radius: 50%;
    /* 보더이중선: double */
    border: 4px double #000;
    /* 1필셀이면 안보인다 그래서 4px 를 준 것이다.  */
}
/* 왼눈 */
.e1 {
    top: 50px;
    left: 50px;
    background-image: url(../images/e1.jpg);
}
/* 오른눈 */
.e2 {
    top: 50px;
    right: 50px;
    background-image: url(../images/e2.jpg);
}
/* 코 */
.nose {
    top: 99px;
    left: 100px;
    width: 50px;
    height: 70px;
    background: url(../images/nose.jpg) no-repeat 0/110% 100%;
    /* 둥근모서리 */
    border-radius: 30px;
}
/* 입 */
.mouth {
    top: 175px;
    left: 78px;
    width: 100px;
    height: 51px;
    background: url(../images/mouth.png) no-repeat 0/100% 100%;
}

/* 입옆에 변모양점 가상요소로 만들기  */
.mouth::before,
.mouth::after {
    content: "";
    display: block; /* 명시적으로 블락 */
    position: absolute; /* 앱솔루트는 블락이긴 하지만 명시적으로 블락 표시함 */
    top: -25px;
    right: -25px;
    /*부모는? .mouth */
    width: 20px;
    height: 20px;
    background-color: rgb(208, 255, 0);

    /* 삼각형 클리핑 속성으로 만들기  */
    clip-path: polygon(0 100%, 50% 0, 100% 100%);
}

.mouth::after {
    transform: rotate(180deg) translateY(-30%);
}

/* 
[css 클리핑 속성 ]
-> clip-path : polygon(x1 y2, x2 y2, ....)]
-> 각 좌표쌍은 띄워쓰기로 각 점은 콤마로 구분
-> 각 점을 연결하여 도형모양만 출력한다. 
-> px 는 각 도형 크기 내부의 수치로 쓰고 % 는 도형을 기준한 위치를 %로 나타낸다.!
->  턱 깍기하는 것은 overflow : hidden 를 주는 것과 같다. 
    히든 처리를 안 했을지라도, 그래서 box-shadow 안된다. 

*/

/* 귀공통*/
.ear {
    top: 80px;
    width: 50px;
    height: 70px;
}

/* 왼귀 */
.er1 {
    left: -50px;
    border-radius: 50% 0 0 50%;
}
/* 오른귀 */
.er2 {
    right: -50px;
    border-radius: 0 50% 50% 0;
}

/* 로봇몸통 */
.body {
    position: relative;
    /* 부모자격 - 하위 직계 div 들*/
    width: 200px;
    height: 400px;
    margin: 0 auto;
    margin-top: 130px;
}

/* 몸통 하위 직계 div 모두 앱솔루트! */
.body > div {
    position: absolute;
}

/* 몸통 가상요소로 상단 만들기 */
.body::before {
    content: "";
    display: block;
    position: absolute;
    left: -50px;
    width: 300px;
    height: 200px;
    /* 그라데이션 */
    background-image: linear-gradient(10deg, #eee, #ca2727, #f70b0b, #f5e6e6);
    /* 몸깍기 */
    clip-path: polygon(0 0, 10% 100%, 50% 50%, 90% 100%, 100% 0);
}

/* 몸통 가상요소로 하단 만들기 */
.body::after {
    content: "";
    display: block;
    position: absolute;
    bottom: -32px;
    left: -82px;
    width: 360px;
    height: 186px;
    background-color: #fff;
    /* 그라데이션 */
    background-image: linear-gradient(-25deg, rgb(0, 217, 255), #330de0, #038ef8, #02e6ff);
    /* 몸 깍기  */
    /* clip-path: polygon(10% 0, 0 50%, 10% 100%, 90% 100%, 100% 50%, 90% 0); */
    clip-path: polygon(
        0% 15%,
        15% 15%,
        15% 0%,
        85% 0%,
        85% 15%,
        100% 15%,
        100% 85%,
        85% 85%,
        85% 100%,
        15% 100%,
        15% 85%,
        0% 85%
    );
    border-radius: 20%;
}

/* 목 */
.neck {
    top: -40px;
    left: 65px;
    width: 70px;
    height: 50px;
    border-radius: 0 0 20px 20px;
    /* 하단보더 */
    border-bottom: 20px ridge goldenrod;
}
/* 팔공통 */
.arm {
    width: 80px;
    height: 230px;
    z-index: -1;
    border-radius: 15px;
    /* 회전축변경 : 가로중앙 세로10% 지점*/
    transform-origin: center 10%;
}

/* 팔공통 가상요소로 연결부분 만들기 */
.arm::before,
.arm::after {
    content: "";
    display: block;
    position: absolute;
    bottom: -34px;
    left: -8px;
    z-index: 1;
    width: 90px;
    height: 68px;
    border-radius: 50%;
    border: 4px solid #000;
    background-color: rgb(226, 197, 29);
    /* 보더, 패딩포함 크기 유지 */
    box-sizing: border-box;
}

/* 팔연결부분 내부박스 */
.arm::after {
    transform: scale(0.8);
    /* 선형그라데이션 */
    background-image: linear-gradient(45deg, rgb(118, 238, 124) 20%, rgb(69, 159, 211) 80%);
}
/* 팔하단  */
.arm span {
    position: absolute;
    top: 100%;
    left: 5px;
    /* 부모는? .arm , arm 자체가 앱솔루트이다. static이 아니면 앱솔루트 부모가 될 수 있다. */
    display: block;
    width: 70px;
    height: 250px;
    border-radius: 15px;
    /* 회전축변경 : 세로방향 top*/
    transform-origin: top;
}

/* 팔하단 가상요소로 손박스 만들기  */
.arm span::after {
    content: "";
    display: block;
    position: absolute;
    bottom: -135px;

    width: 90px;
    height: 135px;
    outline: 2px dashed lime;
}

/* 왼쪽손 배경이미지 */
.a1 span::after {
    left: -6px;
    background: url(../images/hand_left.png) no-repeat bottom/100%;
}
/* 왼팔 */
.a1 {
    top: 16px;
    left: -120px;
    transform: rotate(40deg);
}

/* 왼팔하단 */
.a1 span {
    transform: rotate(126deg);
}

/* 오른손 배경이미지 */
.a2 span::after {
    right: -6px;
    background: url(../images/hand_right.png) no-repeat bottom/100%;
}

/* 오른팔 */
.a2 {
    top: 16px;
    right: -120px;
    transform: rotate(-40deg);
}

/* 오른팔하단 */
.a2 span {
    transform: rotate(52deg);
}

/* 다리공통 */
.leg {
    top: 90%;
    /*  top : 100% 부모박스 높이 만큼 아래로 밀어냄   */
    width: 85px;
    height: 180px;
    z-index: -1;
    border-radius: 30px;
}

/* 다리공통 가상요소로 연결부분 만들기 */
.leg::before,
.leg::after {
    content: "";
    display: block;
    position: absolute;
    bottom: -40px;
    z-index: 1;
    width: 85px;
    height: 85px;
    background-color: #fff;

    border-radius: 15px;
    border: 4px solid #333;
    /* 트랜스폼 : 먼저 x 축 축소하고 회전
    -> 무엇을 먼저했느냐에 따라 결과 달라짐! */
    transform: scaleX(0.8) rotate(45deg);
}

/* 다리연결부분 내부박스 */
.leg::after {
    transform: scale(0.65, 0.8) rotate(90deg);
    /* 선형그라데이션 */
    background-image: linear-gradient(45deg, rgb(171, 241, 58) 20%, rgb(238, 60, 214) 80%);
}
/* 다리하단 공통 */
.leg span {
    position: absolute;
    top: 100%;
    left: 6px;
    /* 부모는? .arm , arm 자체가 앱솔루트이다. static이 아니면 앱솔루트 부모가 될 수 있다. */
    display: block;
    width: 70px;
    height: 220px;
    border-radius: 15px;
    /* 회전축변경 : 세로방향 top*/
    transform-origin: top;
}
/* 다리하단 가상요소로 발 만들기 */
.leg span::after {
    content: "";
    display: block;
    position: absolute;
    bottom: -40px;
    left: -8px;
    width: 80px;
    height: 70px;
    border-radius: 15px;
    background-color: #ccc;
    border-radius: 40px 40px 0 0;
    border: 4px solid rgba(250, 3, 3, 0.562);
    border-bottom: 22px solid rgb(150, 25, 155);
    /* 선형그라데이션 */
    background-image: linear-gradient(-60deg, rgb(201, 68, 172), rgb(224, 189, 189));
}
/* 다리하단 가상요소로 부츠 만들기 */
.leg span::before {
    content: "";
    display: block;
    position: absolute;
    top: 56px;
    left: -2px;
    width: 70px;
    height: 100px;
    border: 4px solid rgba(250, 3, 3, 0.562);
    border-top: 22px solid rgb(150, 25, 155);
    /* 선형그라데이션 */
    background-image: linear-gradient(-60deg, rgb(201, 68, 172), rgb(224, 189, 189));
}

/* 왼다리 */
.l1 {
    left: -15px;
}

/* 오른다리 */
.l2 {
    right: -15px;
}

/* 어깨 공통 */
.shd {
    width: 95px;
    height: 80px;
}
/* 왼어깨 */
.s1 {
    top: -3px;
    left: -138px;
    border-radius: 100% 60% 60% 100%;
    transform: rotate(-8deg);
}
/* 오른어깨 */
.s2 {
    top: -6px;
    right: -140px;
    border-radius: 60% 100% 100% 60%;
    transform: rotate(3deg);
}

/* TV */
/******************************************** 
            3.하단영역 
********************************************/
