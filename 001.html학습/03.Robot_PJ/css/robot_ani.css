@charset "utf-8";
/* 스타일시트 인코딩을 UTF-8 방식으로 설정. 
<meta charset="utf-8"> 브라우저에게  text를 어떻게 그려달라는지 말해주는 것이에요.
위 태그가 없으면 한글, 특수문자 들이 깨져서 나올 수 있어요.

웹브라우저, 컴퓨터의 HTML파일을 웹브라우저에서 표시될 수 있도록 변환하는 처리작업을 얘기해요.
파일의 정보 형태가 어떤 언어로 되어 있는지에 대한 지정이 필요한데 이것을 문자 코드셋이라고 해요. */

/* Robot PJ - 애니메이션 CSS */

/* 키프레임 : 애니메이션 장면  */

/* [ 키프레임이란? ]
- 애니메이션 변화를 지정하는 코딩영역

[ 2장면 코딩법 ]

@keyframes 키프레임명{
    from{시작CSS}
    to{마지막CSS}
}

[ 여러장면 코딩법 ]
- 퍼센트로 장면을 분할하여 사용함
(무한대의 장면 연출가능)

@keyframes 키프레임명{
    0%{CSS설정}
    10%{CSS설정}
    20%{CSS설정}
    ...
    90%{CSS설정}
    100%{CSS설정}
}

[ 설정된 키프레임 호출하는 방법 ]

animation: 이시이지반방마
(이름 시간 이징 지연 반복 방향 마지막상태) */

/* 1-1. 로봇 등장 키프레임 */
@keyframes showRobot {
    /*
    초기값과 같다면 from 은 생략가능함
    from {
        transform: scale(0.1) translate(200%, -50%); 
        스케일이 작으면 퍼센트가 달라셔저 퍼센트 높임 
    애니메이션 애한테 트랜지션을 주면 안된다. 
        
        transform: translate(20%, -20%) scale(0);
    } 
    */
    to {
        transform: translate(0, 0) scale(0.6) /* rotate(720deg) */;
    }
}
/* 로봇을 키프레임 추가
.robx의 내부 div 박스를 회전함
-> 중심점 때문에 만들어서 사용함!  */
@keyframes showRobot2 {
    0% {
        transform: rotate(0);
    }
    50% {
        transform: rotate(360deg);
    }
    100% {
        transform: rotate(-360deg);
    }
}

/* 
[애니메이션 기본특성]
1. 기본적으로 1회만 실행
2. 애니메이션 후 처음 설정된 값으로 돌아감
3. 반복할 경우 시작-> 끝 순으로 반복함

[기본특정 변경하기]
1. 반복실행하고 싶으면 반복여부(animation-iteration-count) 속성값으로 반복횟수를 쓰거나 계속반복실행하고 싶으면 infinite

2. 마지막 애니메이션 설정값으로 끝나고 싶으면 
마지막 상태 (animation-fill-mode) 속성값을 forwards 로 쓴다.

3. 시작 -> 끝, 끝->시작 반복 애니메이션을 역순으로도 설정하고 싶으면 방향(animation-direction) 속성값을 alternate로 쓴다. 
*/

/* 1-2 키프레임 호출설정! -대상 */
.robx {
    /* 초기상태 지정하기 = from 값이다. */
    transform: translate(20%, 10%) scale(0) /* rotate(0) */;
    /* 트랜스폼 기준값 변경  */
    transform-origin: top;

    /* 애니메이션 :이시이지반방마 */
    animation: showRobot 4s ease-out 1s forwards;
    /* animation: 
    showRobot 3s ease-in-out 1s infinite 
    3 alternate forwards;  */
}
/* 로봇을 추가회전 애니호출*/
.robx > div {
    /* 애니메이션 : 이시이지반방마 */
    animation: showRobot2 4s ease-in-out 1s;
}

/* 2-1. 왼팔올리기  */
@keyframes leftArm1 {
    /* 팔상단 */
    to {
        transform: rotate(52deg);
    }
}

@keyframes leftArm2 {
    /* 팔하단 */
    to {
        transform: rotate(-98deg);
    }
}

@keyframes leftArm3 {
    /* 왼손 */
    to {
        transform: rotate(77deg);
    }
}

/* 2-2 왼팔애니 호출하기  */
/* 애니메이션 :이시이지반방마 */
.a1 {
    animation: leftArm1 0.5s ease-in-out 5s forwards;
}

.a1 span {
    animation: leftArm2 0.5s ease-in-out 5s forwards;
}

.a1 span::after {
    animation: leftArm3 0.5s ease-in-out 5s forwards;
}

/* 3-1 오른팔 올리기 */

@keyframes rightArm1 {
    /* 팔상단  한번올리기 */
    to {
        transform: rotate(-122deg);
    }
}

@keyframes rightArm1-2 {
    /* 팔상단  계속 흔들기 */
    from {
        transform: rotate(-122deg);
    }
    to {
        transform: rotate(-142deg);
    }
}
@keyframes rightArm2 {
    /* 팔하단 계속 흔들기 */
    from {
        transform: rotate(10deg);
    }
    to {
        transform: rotate(-10deg);
    }
}

@keyframes rightArm3 {
    /* 오른손 계속흔들기 */
    from {
        transform: rotate(20deg) rotateY(180deg);
        right: -22px;
    }
    to {
        transform: rotate(-20deg) rotateY(180deg);
        right: -22px;
    }
}

/* 3-2 오른팔 애니 호출 */
.a2 {
    /* 애니메이션 :이시이지반방마 */
    animation: rightArm1 0.5s ease-out 6s forwards, rightArm1-2 0.3s linear 6.5s infinite alternate;
}

/* 3-3 오른팔 하단  */
.a2 span {
    animation: rightArm2 0.3s linear 6.5s infinite alternate;
}

/* 오른손  */
.a2 span::after {
    animation: rightArm2 0.3s linear 6.5s infinite alternate;
}
